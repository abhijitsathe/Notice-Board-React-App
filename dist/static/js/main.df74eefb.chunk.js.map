{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/AuthActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/ProjectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","project_ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_NavBar","exact","path","component","ProjectDetails","React","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df74eefb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/AuthActions';\n\nconst SignedInLinks = (props) => {\n   return (\n       <ul className=\"right\">\n           <li><NavLink to='/create'>New Project </NavLink></li>\n           <li><a onClick={props.signOut}> Logout </a></li>\n           <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\"> { props.profile.initials } </NavLink></li>\n       </ul>\n   )\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: ()=> dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import { getFirestore } from \"redux-firestore\";\n\nexport const signIn = (credentials) =>{\n    return(dispatch, getState, { getFirebase }) =>{\n\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err)=>{\n            dispatch({type:'LOGIN_ERROR', err});\n        });\n    }\n}\n\n\nexport const signOut = () => { \n    return(dispatch, getState, {getFirebase}) =>{\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT_SUCCESS'})\n        })\n\n    }\n}\n\nexport const signUp = (newUser) =>{\n    return(dispatch, getState, {getFirebase, getFirestore}) =>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch((err)=>{\n            dispatch({ type:'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n   return (\n       <ul className=\"right\">\n           <li><NavLink to='/signup'>Sign Up </NavLink></li>\n           <li><NavLink to='/signin'> Login </NavLink></li>\n\n       </ul>\n   )\n\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst NavBar = (props) => {\n   const { auth, profile } = props;\n   const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n   return (\n    <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n            <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n            { links }\n        </div>\n    </nav>\n   )\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props)=> {\n\n    const {notifications} = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item =>{\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\nconst ProjectSummary = ({project}) =>{\n\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>{project.content}</p>\n                <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate().toString()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\n\nconst ProjectList = ({projects}) =>{\n\n    return(\n        <div className=\"list section\">\n            { projects && projects.map(project=>{\n                return(\n                    <Link to={'/project/'+ project.id}>\n                         <ProjectSummary project ={project} key={project.id} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\nexport default ProjectList;","import React, { Component} from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../project/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport {compose} from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render(){\n        // console.log(this.props);\n       const { projects, auth, notifications } = this.props;\n       \n       if(!auth.uid) return <Redirect to='/signin' />\n\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(connect(\n    mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n    )(Dashboard)","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\nconst ProjectDetails =(props)=> {\n\n    const { project, auth } = props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    if( project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\"> { project.title } </span>\n                        <p>{ project.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\"></div>\n                    <div>\n                        Posted By the {project.authorFirstName} {project.authorLastName}\n                    </div>  \n                    <div>\n                        {moment(project.createdAt.toDate().toString()).calendar()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"container center\">\n                <p>\n                    loading project...\n                </p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/AuthActions';\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }     \n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit =(e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n  \n  \n    render() {\n        const { authError, auth } = this.props;\n\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/AuthActions'\n\n\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }     \n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit =(e)=>{\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n  \n  \n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p> { authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps =(dispatch)=>{\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/ProjectActions';\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }     \n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit =(e)=>{\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n  \n  \n    render() {\n       const { auth } = this.props;\n\n       if(!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) =>{\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //make async call to databse\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err)=>{\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\n        })\n    }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\nclass App extends React.Component { \n    render() {\n   return (\n     <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path ='/project/:id' component={ProjectDetails}/>\n          <Route path='/signin' component={SignIn} /> \n          <Route path= '/signup' component={SignUp} />\n          <Route path= '/create' component={CreateProject} />\n\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) =>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n        console.log('Error')\n\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n      ]\n}\n\nconst projectReducer = (state = initState, action) =>{\n    switch (action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;"," import firebase from 'firebase/app';\n import 'firebase/firestore';\n import 'firebase/auth';\n \n \n // Your web app's Firebase configuration\n var firebaseConfig = {\n    apiKey: \"AIzaSyDDcE0Vd7o0L_tMQg_t1Tchw2ZFBMgq0XQ\",\n    authDomain: \"marioplan-83c05.firebaseapp.com\",\n    databaseURL: \"https://marioplan-83c05.firebaseio.com\",\n    projectId: \"marioplan-83c05\",\n    storageBucket: \"\",\n    messagingSenderId: \"252812314003\",\n    appId: \"1:252812314003:web:f42ec32c526a352c\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n            applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n            reduxFirestore(fbConfig),\n            reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n );\n\n store.firebaseAuthIsReady.then(() => {\n        ReactDOM.render(<Provider store ={store}><App /></Provider>, document.getElementById('root'));\n        serviceWorker.unregister();\n })\n\n"],"sourceRoot":""}